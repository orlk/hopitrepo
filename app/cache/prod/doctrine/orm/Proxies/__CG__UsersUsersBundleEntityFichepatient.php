<?php

namespace Proxies\__CG__\Users\UsersBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Fichepatient extends \Users\UsersBundle\Entity\Fichepatient implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'numFiche', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'taille', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'poid', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'tension', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'temperature', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'perimetre', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'groupeSanguin', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'codedm', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'datecreation', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'remarque');
        }

        return array('__isInitialized__', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'numFiche', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'taille', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'poid', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'tension', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'temperature', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'perimetre', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'groupeSanguin', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'codedm', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'datecreation', '' . "\0" . 'Users\\UsersBundle\\Entity\\Fichepatient' . "\0" . 'remarque');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Fichepatient $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getNumFiche()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getNumFiche();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumFiche', array());

        return parent::getNumFiche();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaille($taille)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaille', array($taille));

        return parent::setTaille($taille);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaille()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaille', array());

        return parent::getTaille();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoid($poid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoid', array($poid));

        return parent::setPoid($poid);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoid', array());

        return parent::getPoid();
    }

    /**
     * {@inheritDoc}
     */
    public function setTension($tension)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTension', array($tension));

        return parent::setTension($tension);
    }

    /**
     * {@inheritDoc}
     */
    public function getTension()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTension', array());

        return parent::getTension();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemperature($temperature)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemperature', array($temperature));

        return parent::setTemperature($temperature);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemperature()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemperature', array());

        return parent::getTemperature();
    }

    /**
     * {@inheritDoc}
     */
    public function setPerimetre($perimetre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPerimetre', array($perimetre));

        return parent::setPerimetre($perimetre);
    }

    /**
     * {@inheritDoc}
     */
    public function getPerimetre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPerimetre', array());

        return parent::getPerimetre();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupeSanguin($groupeSanguin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupeSanguin', array($groupeSanguin));

        return parent::setGroupeSanguin($groupeSanguin);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupeSanguin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupeSanguin', array());

        return parent::getGroupeSanguin();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodedm($codedm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodedm', array($codedm));

        return parent::setCodedm($codedm);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodedm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodedm', array());

        return parent::getCodedm();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatecreation($datecreation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatecreation', array($datecreation));

        return parent::setDatecreation($datecreation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatecreation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatecreation', array());

        return parent::getDatecreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemarque($remarque)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemarque', array($remarque));

        return parent::setRemarque($remarque);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemarque()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemarque', array());

        return parent::getRemarque();
    }

}
