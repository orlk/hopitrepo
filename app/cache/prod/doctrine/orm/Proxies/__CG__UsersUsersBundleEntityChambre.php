<?php

namespace Proxies\__CG__\Users\UsersBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Chambre extends \Users\UsersBundle\Entity\Chambre implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Users\\UsersBundle\\Entity\\Chambre' . "\0" . 'idchambre', '' . "\0" . 'Users\\UsersBundle\\Entity\\Chambre' . "\0" . 'numchambre', '' . "\0" . 'Users\\UsersBundle\\Entity\\Chambre' . "\0" . 'typechambre', '' . "\0" . 'Users\\UsersBundle\\Entity\\Chambre' . "\0" . 'dateArriv', '' . "\0" . 'Users\\UsersBundle\\Entity\\Chambre' . "\0" . 'dateSort', '' . "\0" . 'Users\\UsersBundle\\Entity\\Chambre' . "\0" . 'disponibiliter', '' . "\0" . 'Users\\UsersBundle\\Entity\\Chambre' . "\0" . 'idpatient');
        }

        return array('__isInitialized__', '' . "\0" . 'Users\\UsersBundle\\Entity\\Chambre' . "\0" . 'idchambre', '' . "\0" . 'Users\\UsersBundle\\Entity\\Chambre' . "\0" . 'numchambre', '' . "\0" . 'Users\\UsersBundle\\Entity\\Chambre' . "\0" . 'typechambre', '' . "\0" . 'Users\\UsersBundle\\Entity\\Chambre' . "\0" . 'dateArriv', '' . "\0" . 'Users\\UsersBundle\\Entity\\Chambre' . "\0" . 'dateSort', '' . "\0" . 'Users\\UsersBundle\\Entity\\Chambre' . "\0" . 'disponibiliter', '' . "\0" . 'Users\\UsersBundle\\Entity\\Chambre' . "\0" . 'idpatient');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Chambre $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdchambre()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdchambre();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdchambre', array());

        return parent::getIdchambre();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumchambre($numchambre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumchambre', array($numchambre));

        return parent::setNumchambre($numchambre);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumchambre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumchambre', array());

        return parent::getNumchambre();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypechambre($typechambre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypechambre', array($typechambre));

        return parent::setTypechambre($typechambre);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypechambre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypechambre', array());

        return parent::getTypechambre();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateArriv($dateArriv)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateArriv', array($dateArriv));

        return parent::setDateArriv($dateArriv);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateArriv()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateArriv', array());

        return parent::getDateArriv();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateSort($dateSort)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateSort', array($dateSort));

        return parent::setDateSort($dateSort);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateSort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateSort', array());

        return parent::getDateSort();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisponibiliter($disponibiliter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisponibiliter', array($disponibiliter));

        return parent::setDisponibiliter($disponibiliter);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisponibiliter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisponibiliter', array());

        return parent::getDisponibiliter();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdpatient(\Users\UsersBundle\Entity\Patient $idpatient = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdpatient', array($idpatient));

        return parent::setIdpatient($idpatient);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdpatient()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdpatient', array());

        return parent::getIdpatient();
    }

}
